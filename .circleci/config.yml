version: 2

jobs:
  build:
    environment:
      IMAGE_NAME: chandaom41k3/api
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - run:
          name: Build application Docker image
          command: |
            docker build -t api ./Docker/
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PASS}" 
              docker tag api $IMAGE_NAME
              docker push $IMAGE_NAME:latest
            fi

  deploy:
    machine:
      image: circleci/classic:201808-01
      #docker_layer_caching: true
    environment:
      IMAGE_NAME: chandaom41k3/api
      K8S_VERSION: v1.12.0
      KUBECONFIG: /home/circleci/.kube/config
      MINIKUBE_VERSION: v0.31.0
      MINIKUBE_WANTUPDATENOTIFICATION: false
      MINIKUBE_WANTREPORTERRORPROMPT: false
      MINIKUBE_HOME: /home/circleci
      CHANGE_MINIKUBE_NONE_USER: true
      #GOPATH: /home/circleci/go
    working_directory: /home/circleci
    steps:
#      - run:
#          name: Install Docker
#          command: |
#
      - run:
          name: Pull Image Docker
          command: |
            docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PASS}" 
            docker pull $IMAGE_NAME:latest
      - run:
          name: Setup kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
            mkdir -p ${HOME}/.kube
            cp -R ./config/config ${HOME}/.kube/
      - run:
          name: Setup minikube
          command: |
            curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
      - run:
          name: Start minikube
          command: |
            sudo -E minikube start --vm-driver=none --cpus 2 --memory 4096 --kubernetes-version=${K8S_VERSION}
      - run:
          name: Replace config minikube
          command: |
            cat ./config/client.crt > ${HOME}/.minikube/profiles/minikube/client.crt
            cat ./config/client.key > ${HOME}/.minikube/profiles/minikube/client.key
            cat ./config/ca.crt > ${HOME}/.minikube/ca.crt

             
            
      
#  deploy:
#    environment:
#      IMAGE_NAME: chandaom41k3/api
#    working_directory: /app
#    docker:
#      - image: docker:17.05.0-ce-git
#    steps:
#      - add_ssh_keys
#      - setup_remote_docker
#      - run:
#          name: Add the keys to the known hosts
#          command: |
#            #echo "${authorized}" >> /root.ssh/authorized.pem        #ssh-keyscan -H ${PROJECT_DEPLOY_HOST} >> /root/.ssh/known_hosts
#            #ssh-keyscan -H ${PROJECT_DEPLOY_HOST} >> /root/.ssh/known_hosts
#            #chmod 400 /root/.ssh/authorezed.pem
#            ssh-keyscan -H ${PROJECT_DEPLOY_HOST} >> /root/.ssh/known_hosts
#            echo "${authorized}" >> ~/.ssh/id_rsa
#            chmod 400 ~/.ssh/id_rsa
#      - run:
#          name: Pull Docker image onto deploy box
#          command: |
#            ssh ${PROJECT_DEPLOY_USER}@${PROJECT_DEPLOY_HOST} 
#            docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PASS}" 
#            docker push $IMAGE_NAME:latest
#      - run:
#          name: Do a rolling service update
#          command: |
#           # This should already be scaled to two instances
#           # The 'uniq' suppresses a long stream of ncurses updates
#           # (which the CI console doesn't cope with very well)
#            ssh -o StrictHostKeyChecking=no ${PROJECT_DEPLOY_USER}@${PROJECT_DEPLOY_HOST} 
#            "kubectl apply -f /k8s/api-service.yml"
#            "kubectl apply -f /k8s/deployment.yml"
#            "kubectl apply -f /k8s/redis-dd.yml"
#            "kubectl apply -f /k8s/redis-svc.yaml"

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build 
