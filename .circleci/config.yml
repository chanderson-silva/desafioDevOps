version: 2

jobs:
  build:
    environment:
      IMAGE_NAME: chandaom41k3/api
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - run:
          name: Build application Docker image
          command: |
            docker build -t api ./Docker/
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PASS}" 
              docker tag api $IMAGE_NAME
              docker push $IMAGE_NAME:latest
            fi


  deploy:
    environment:
      IMAGE_NAME: chandaom41k3/api
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - add_ssh_keys
      - setup_remote_docker
      - run:
          name: Add the keys to the known hosts
          command: |
            #echo "${authorized}" >> /root.ssh/authorized.pem        #ssh-keyscan -H ${PROJECT_DEPLOY_HOST} >> /root/.ssh/known_hosts
            #ssh-keyscan -H ${PROJECT_DEPLOY_HOST} >> /root/.ssh/known_hosts
            #chmod 400 /root/.ssh/authorezed.pem
            echo "${authorized}" >> ~/.ssh/id_rsa.pub
      - run:
          name: Pull Docker image onto deploy box
          command: |
            ssh ${PROJECT_DEPLOY_USER}@${PROJECT_DEPLOY_HOST} 
            docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PASS}" 
            docker push $IMAGE_NAME:latest
      - run:
          name: Do a rolling service update
          command: |
           # This should already be scaled to two instances
           # The 'uniq' suppresses a long stream of ncurses updates
           # (which the CI console doesn't cope with very well)
            ssh ${PROJECT_DEPLOY_USER}@${PROJECT_DEPLOY_HOST} 
            "kubectl apply -f /k8s/api-service.yml"
            "kubectl apply -f /k8s/deployment.yml"
            "kubectl apply -f /k8s/redis-dd.yml"
            "kubectl apply -f /k8s/redis-svc.yaml"
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build 
